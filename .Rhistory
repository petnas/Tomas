fill = NULL)+
scale_fill_manual(values=my_palette)
duomenys %>%
select(MUTACIJA) %>%
group_by(MUTACIJA) %>%
summarise(
n = n()
) %>%
ggplot(aes(x='', y=n, fill = MUTACIJA))+
geom_bar(stat='identity', width = 1)+
coord_polar('y')+
theme_void()+
labs(title = 'Mutacijų proporcijos',
fill = NULL)+
scale_fill_manual(values=my_palette)
my_palette <- c('#257a9e','#60b3e4','#1c5673','#cee0e8')
duomenys %>%
select(MUTACIJA) %>%
group_by(MUTACIJA) %>%
summarise(
n = n()
) %>%
ggplot(aes(x='', y=n, fill = MUTACIJA))+
geom_bar(stat='identity', width = 1)+
coord_polar('y')+
theme_void()+
labs(title = 'Mutacijų proporcijos',
fill = NULL)+
scale_fill_manual(values=my_palette)
ggsave('mut_prop.png', width = 10, height = 5)
ggsave('istorija_prop.png', width = 10, height = 5)
options(repr.plot.width = 3, repr.plot.height =3)
duomenys %>%
select(HISTOLOGIJA_PO_I_ETAPO, HISTOLOGIJA_PO_II_ETAPO, VIENU_ETAPU_OPERUOJANT_HISTOLOGIJOS_ATSAKYMAS) %>%
gather(column, value, na.rm = T) %>%
group_by(column) %>%
summarise(
RASTA = sum(value != 'n.y.'),
NERASTA = sum(value == 'n.y.')
) %>%
pivot_longer(cols = -column, names_to = 'Stage', values_to = 'Diagnosis') %>%
ggplot(aes(column, Diagnosis, fill=Stage))+
geom_bar(stat='identity', position = position_stack(reverse = TRUE))+
labs(title='Histologiškai patvirtinti navikai po operacinių etapų.',
x=NULL,
y=NULL,
fill = NULL)+
scale_x_discrete(labels = c('Po I etapo',
'Po II etapo',
'Po vienmomentės\noperacijos'))+
# scale_fill_discrete(labels=c('Nersta', 'Rasta'))+
scale_fill_manual(values=my_palette, breaks = c('RASTA', 'NERASTA'), labels=c('Rasta', 'Nerasta'))
ggsave('bar_van_op.png', width = 10, height = 5)
duomenys_pilni <- duomenys %>%
filter(AR_BUVO_NUSTATYTAS_VEZYS != 'x')
count_table <- duomenys_pilni %>%
select(SIRGO_AR_PIRMINE, AR_BUVO_NUSTATYTAS_VEZYS) %>%
table()
count_table
plot_box <- as.data.frame(count_table) %>%
ggplot(aes(SIRGO_AR_PIRMINE, Freq, fill=AR_BUVO_NUSTATYTAS_VEZYS))+
geom_bar(stat='identity', position = position_stack(reverse = TRUE))+
labs(title = 'Naviko aptikimo atvejai pagal ligos istoriją',
y=NULL,
x=NULL,
fill=NULL,
)+
scale_x_discrete(labels = c('Pirminis\nsusirgimas',
'Pasikartojęs\nsusirgimas'))+
scale_fill_manual(values=my_palette, breaks = c('TAIP', 'NE'), labels=c('Rasta', 'Nerasta'))
plot_box
ggsave('nav_ist_bar.png', width = 10, height = 5)
bxp <- duomenys_pilni %>%
select(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS, AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
pivot_longer(cols = c(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS), values_to = 'Turis', names_to = 'Operacija') %>%
na.omit() %>%
select(AR_BUVO_APSKRITAI_KOMPLIKACIJA, Turis) %>%
group_by(AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
ggboxplot(x = "AR_BUVO_APSKRITAI_KOMPLIKACIJA", y = "Turis", fill='#60b3e4')+
labs(title='Komplikacijų priklausomybė nuo naudotų implantų tūrio',
x=NULL,
y='Tūris, cc')+
scale_x_discrete(labels = c('Komplikacijos buvo',
'Komplikacijos nebuvo'))+
theme_classic()+
scale_y_continuous(limits = c(100, 700), expand = c(0, 0))+
geom_text(data = sample_size,
aes(y=150, label = paste('n=', n), vjust = 1))
imp_komp <- duomenys_pilni %>%
select(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS, AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
pivot_longer(cols = c(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS), values_to = 'Turis', names_to = 'Operacija') %>%
na.omit() %>%
group_by(AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
summarise(
implantu_turis = mean(Turis),
implantu_sn = sd(Turis),
implantu_sample = n()
)
stat.test <- duomenys_pilni %>%
select(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS, AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
pivot_longer(cols = c(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS), values_to = 'Turis', names_to = 'Operacija') %>%
na.omit() %>%
t_test(Turis~AR_BUVO_APSKRITAI_KOMPLIKACIJA)
sample_size <- duomenys_pilni %>%
select(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS, AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
pivot_longer(cols = c(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS), values_to = 'Turis', names_to = 'Operacija') %>%
na.omit() %>%
group_by(AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
tally()
bxp <- duomenys_pilni %>%
select(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS, AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
pivot_longer(cols = c(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS), values_to = 'Turis', names_to = 'Operacija') %>%
na.omit() %>%
select(AR_BUVO_APSKRITAI_KOMPLIKACIJA, Turis) %>%
group_by(AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
ggboxplot(x = "AR_BUVO_APSKRITAI_KOMPLIKACIJA", y = "Turis", fill='#60b3e4')+
labs(title='Komplikacijų priklausomybė nuo naudotų implantų tūrio',
x=NULL,
y='Tūris, cc')+
scale_x_discrete(labels = c('Komplikacijos buvo',
'Komplikacijos nebuvo'))+
theme_classic()+
scale_y_continuous(limits = c(100, 700), expand = c(0, 0))+
geom_text(data = sample_size,
aes(y=150, label = paste('n=', n), vjust = 1))
stat.test <- stat.test %>%
add_xy_position(x='AR_BUVO_APSKRITAI_KOMPLIKACIJA', dodge=0.5) %>%
mutate(y.position=600)
bxp + stat_pvalue_manual(
stat.test, label='p', tip.length = 0)
ggsave('box_komplikacijos_implantai.png', width = 10, height = 5)
stat.test <- duomenys_pilni %>%
select(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS, AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
pivot_longer(cols = c(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS), values_to = 'Turis', names_to = 'Operacija') %>%
na.omit() %>%
group_by(Operacija) %>%
wilcox_test(Turis~AR_BUVO_APSKRITAI_KOMPLIKACIJA)
sample_size <- duomenys_pilni %>%
select(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS, AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
pivot_longer(cols = c(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS), values_to = 'Turis', names_to = 'Operacija') %>%
na.omit() %>%
group_by(Operacija, AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
tally()
bxp <- duomenys_pilni %>%
select(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS, AR_BUVO_APSKRITAI_KOMPLIKACIJA) %>%
pivot_longer(cols = c(II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS), values_to = 'Turis', names_to = 'Operacija') %>%
na.omit() %>%
group_by(Operacija) %>%
ggboxplot(x = "Operacija", y = "Turis",
fill = "AR_BUVO_APSKRITAI_KOMPLIKACIJA", palette = my_palette
)+
labs(title='Vidutinis implantų tūris ir komplikacijos',
x=NULL,
y='Tūris, cc',
fill = 'Komplikacija')+
scale_x_discrete(labels = c('Su paruošiamąja\noperacija',
'Vienmomentinė\noperacija.'))+
theme_classic()+
scale_y_continuous(limits = c(100, 700), expand = c(0, 0))+
geom_text(data = sample_size,
aes(y=150, label = paste('n=', n), vjust = 1),
position = position_dodge2(0.9))
stat.test <- stat.test %>%
add_xy_position(x='Operacija', dodge=0.8)
bxp + stat_pvalue_manual(
stat.test, label='p', tip.length = 0)
ggsave('komplikacijos_turis_group.png', width = 10, height = 5)
count_table <- duomenys_pilni %>%
select(Komplikacija = AR_BUVO_APSKRITAI_KOMPLIKACIJA,
KRUTU_PTOZE_PRIES_I_ETAPĄ) %>%
mutate(I_PT = factor(KRUTU_PTOZE_PRIES_I_ETAPĄ)) %>%
select(Komplikacija, I_PT) %>%
na.omit() %>%
table()
plot_box <- as.data.frame(count_table) %>%
ggplot(aes(I_PT, Freq, fill=Komplikacija))+
geom_bar(stat='identity', position = position_stack(reverse = TRUE))+
labs(title = 'Komplikacijos pagal Ptoze operuojant II etapais',
y=NULL,
x=NULL,)+
scale_x_discrete(labels = c('I','II','III'))+
scale_fill_manual(values=my_palette,breaks = c('TAIP', 'NE'), labels=c('TAIP', 'NE'))
plot_box
ggsave('bar_komp_II.png', width = 10, height = 5)
pivot <- duomenys_pilni %>%
select(I_K = I_ETAPO_PASALINTI_AUDINIAI_KAIRE, I_D = I_ETAPO_PASALINTI_AUDINIAI_DESINE, II_K = II_ETAPO_PASALINTI_AUDINIAI_KAIRE, II_D = II_ETAPO_PASALINTI_AUDINIAI_DESINE, V_K = VIENU_ETAPU_OPERUOJANT_PASALINTU_AUDINIU_KAIREJE, V_D = VIENU_ETAPU_OPERUOJANT_PASALINTI_AUDINIAI_DESINEJE, Komplikacija_vienu = AR_BUVO_KOMPLIKACIJA_OPERUOJANT_VIENU_ETAPU, Komplikacija_dviem = AR_BUVO_KOMPLIKACIJA_PO_II_OPERACINIO_ETAPO, Tipas = VIENU_AR_DVIEM_ETAPAIS) %>%
filter(!(is.na(I_K)&!is.na(II_K))) %>%
filter(!(is.na(II_K)&!is.na(I_K))) %>%
filter(!(is.na(I_D)&!is.na(II_D))) %>%
filter(!(is.na(II_D)&!is.na(I_D))) %>%
mutate(D_K = I_K + II_K, D_D = I_D + II_D) %>%
mutate(Komplikacija = ifelse(is.na(Komplikacija_vienu), Komplikacija_dviem, Komplikacija_vienu)) %>%
mutate(Komplikacija = ifelse(Komplikacija =='NEBUVO', 'NE', Komplikacija)) %>%
select(D_K, D_D, V_K, V_D, Komplikacija, Tipas) %>%
mutate(D_Krutis = ifelse(Tipas == 'VIENMOMENTINE',V_D,D_D),
K_Krutis = ifelse(Tipas == 'VIENMOMENTINE',V_K,D_K)) %>%
select(D_Krutis, K_Krutis, Tipas, Komplikacija) %>%
pivot_longer(c(D_Krutis, K_Krutis), names_to = 'Puse', values_to = 'Turis') %>%
na.omit() %>%
mutate(Komplikacija = ifelse(Komplikacija == 'DESINE' & Puse == 'K_Krutis', 'NE', Komplikacija)) %>%
mutate(Komplikacija = ifelse(Komplikacija != 'NE', 'TAIP', Komplikacija)) %>%
select(Komplikacija, Turis)
ttest <- pivot %>%
t_test(Turis~Komplikacija)
sample_size <- pivot %>%
group_by(Komplikacija) %>%
tally()
bxp <- pivot %>%
ggboxplot(x = 'Komplikacija', y = 'Turis', fill='#60b3e4')+
labs(title='Vidutinis pašalintų audinių svoris ir komplikacijos',
x=NULL,
y='Svoris, gramai')+
scale_x_discrete(labels = c('Komplikacijų\nnebuvo',
'Komplikacijų\nbuvo'))+
theme_classic()+
scale_fill_brewer(palette = "Pastel1")+
scale_y_continuous(limits = c(-100, 1800), expand = c(0, 0))+
geom_text(data = sample_size,
aes(y=0, label = paste('n=', n), vjust = 1))
# geom_text(data = sample_size,
#           aes(Operacija,Inf, label = paste("n=", n)),
#             position = position_dodge(.9))+
ttest <- ttest %>%
add_xy_position(x='Komplikacija', dodge=0.5) %>%
mutate(y.position=1600)
bxp + stat_pvalue_manual(
ttest, label='p', tip.length = 0.01)
ggsave('svoris_komp_box.png', width = 10, height = 5)
table <- duomenys_pilni %>%
select(PSEUDONIMAS,Peksija = `PEKSIJOS_TIPAS/KOJA`, Lovadieniai = I_ETAPO_LOVADIENIAI) %>%
na.omit() %>%
group_by(Peksija) %>%
summarise(
mean = round(mean(Lovadieniai),2),
sn = round(sd(Lovadieniai),2),
sample_size = n()
)
table
bxp <- duomenys_pilni %>%
select(PSEUDONIMAS,Peksija = `PEKSIJOS_TIPAS/KOJA`, Lovadieniai = I_ETAPO_LOVADIENIAI) %>%
na.omit() %>%
group_by(Peksija) %>%
ggboxplot(x='Peksija', y='Lovadieniai', order = c("APATINE",'SUPEROMEDIALINE','VIRSUTINE','BENELLI'), fill='Peksija', palette = my_palette)+
labs(title='Hospitalizacijos trukmės priklausomybė\nnuo paruošiamosios operacijos metodo.',
x=NULL,
y='Lovadieniai',
fill=NULL)+
theme_classic()+
theme(legend.position="none")+
scale_y_continuous(limits = c(0,10), expand = c(0, 0))+
geom_text(data = table,
aes(y=0.3, label = paste('n=', sample_size), vjust = 0.1))+
scale_x_discrete(labels=c('Apatinė\nkojytė', 'Superomedialinė\nkojytė', 'Viršutinė\nkojytė','Periareoliarinis\nBenelli\npakėlimas'))
print('VARIACIJOS TESTAS:')
var_test <- duomenys_pilni %>%
select(Peksija = `PEKSIJOS_TIPAS/KOJA`, Lovadieniai = I_ETAPO_LOVADIENIAI) %>%
mutate(Peksija = factor(Peksija)) %>%
na.omit() %>%
filter(Peksija != 'BENELLI') %>%
levene_test(Lovadieniai~Peksija)
var_test
print('Equal-variance two-sample T-test:')
ttest <- duomenys_pilni %>%
select(Peksija = `PEKSIJOS_TIPAS/KOJA`, Lovadieniai = I_ETAPO_LOVADIENIAI) %>%
na.omit() %>%
filter(Peksija != 'BENELLI') %>%
t_test(Lovadieniai~Peksija, var.equal = T)
ttest
ttest <- ttest %>%
add_xy_position(x='Peksija', dodge=0.9, step.increase = 0.3)
bxp + stat_pvalue_manual(
ttest, label='p', tip.length = 0.01)
ggsave('trukme_metodas_box.png', width = 10, height = 5)
summary_table <- duomenys_pilni %>%
select(I_K = `VIENU_ETAPU_SN-NAC_PRIES_OPERACIJĄ_KAIRE`, I_D = `VIENU_ETAPU_SN-NAC_PRIES_OPERACIJĄ_DESINE`, II_K = `I_ETAPO_PRIESOPERACINIAI_SN-NAC_KAIRE`, II_D = `I_ETAPO_PRIESOPERACINIAI_SN-NAC_DESINE`) %>%
mutate(I_max = pmax(I_K, I_D), II_max = pmax(II_K, II_D))%>%
select(I_max, II_max) %>%
pivot_longer(c(I_max, II_max), names_to = 'Stage', values_to = 'max') %>%
na.omit() %>%
group_by(Stage) %>%
summarise(
mean = mean(max),
sd = sd(max),
n = n()
)
summary_table
ttest <- duomenys_pilni %>%
select(I_K = `VIENU_ETAPU_SN-NAC_PRIES_OPERACIJĄ_KAIRE`, I_D = `VIENU_ETAPU_SN-NAC_PRIES_OPERACIJĄ_DESINE`, II_K = `I_ETAPO_PRIESOPERACINIAI_SN-NAC_KAIRE`, II_D = `I_ETAPO_PRIESOPERACINIAI_SN-NAC_DESINE`) %>%
mutate(I_max = pmax(I_K, I_D), II_max = pmax(II_K, II_D))%>%
select(I_max, II_max) %>%
pivot_longer(c(I_max, II_max), names_to = 'Stage', values_to = 'max') %>%
na.omit() %>%
t_test(max~Stage)
print('EQUAAL-VARIANCE TWO-SAMPLE T-testas:')
ttest['p'] <- 'p<0.001'
ttest
sample_size <- duomenys_pilni %>%
select(I_K = `VIENU_ETAPU_SN-NAC_PRIES_OPERACIJĄ_KAIRE`, I_D = `VIENU_ETAPU_SN-NAC_PRIES_OPERACIJĄ_DESINE`, II_K = `I_ETAPO_PRIESOPERACINIAI_SN-NAC_KAIRE`, II_D = `I_ETAPO_PRIESOPERACINIAI_SN-NAC_DESINE`) %>%
mutate(I_max = pmax(I_K, I_D), II_max = pmax(II_K, II_D))%>%
select(I_max, II_max) %>%
pivot_longer(c(I_max, II_max), names_to = 'Stage', values_to = 'max') %>%
na.omit() %>%
group_by(Stage) %>%
tally()
sample_size
bxp <- duomenys_pilni %>%
select(I_K = `VIENU_ETAPU_SN-NAC_PRIES_OPERACIJĄ_KAIRE`, I_D = `VIENU_ETAPU_SN-NAC_PRIES_OPERACIJĄ_DESINE`, II_K = `I_ETAPO_PRIESOPERACINIAI_SN-NAC_KAIRE`, II_D = `I_ETAPO_PRIESOPERACINIAI_SN-NAC_DESINE`) %>%
mutate(I_max = pmax(I_K, I_D), II_max = pmax(II_K, II_D))%>%
select(I_max, II_max) %>%
pivot_longer(c(I_max, II_max), names_to = 'Stage', values_to = 'max') %>%
na.omit() %>%
group_by(Stage) %>%
ggboxplot(x='Stage', y='max', fill='#60b3e4')+
labs(title='Operacijos metodikos pasirinkimo\npriklausomybė nuo SN-NAC atstumo.',
x=NULL,
y='SN-NAC, centimetrai')+
theme_classic()+
scale_fill_brewer(palette = "Pastel1")+
scale_y_continuous(limits = c(10,40), expand = c(0, 0))+
scale_x_discrete(labels = c('Su paruošiamąja\noperacija',
'Vienmomentinė'))+
geom_text(data = sample_size,
aes(y=12, label = paste('n=', n), vjust = 0.1))
ttest <- ttest %>%
add_xy_position(x='Stage', dodge=0.9, step.increase = 0.3)
bxp = bxp + stat_pvalue_manual(
ttest, label='p', tip.length = 0.01)
bxp
ggsave('metodas_SN_box.png', width = 10, height = 5)
turis_op = duomenys_pilni %>%
select(I_K = I_ETAPO_PASALINTI_AUDINIAI_KAIRE, I_D = I_ETAPO_PASALINTI_AUDINIAI_DESINE, II_K = II_ETAPO_PASALINTI_AUDINIAI_KAIRE, II_D = II_ETAPO_PASALINTI_AUDINIAI_DESINE, V_K = VIENU_ETAPU_OPERUOJANT_PASALINTU_AUDINIU_KAIREJE, V_D = VIENU_ETAPU_OPERUOJANT_PASALINTI_AUDINIAI_DESINEJE, Etapai = VIENU_AR_DVIEM_ETAPAIS) %>%
filter(!(is.na(I_K)&!is.na(II_K))) %>%
filter(!(is.na(II_K)&!is.na(I_K))) %>%
filter(!(is.na(I_D)&!is.na(II_D))) %>%
filter(!(is.na(II_D)&!is.na(I_D))) %>%
mutate(D_K = I_K + II_K, D_D = I_D + II_D) %>%
select(D_K, D_D, V_K, V_D) %>%
pivot_longer(c(D_K, D_D, V_K, V_D), names_to = 'Operacija_puse', values_to = 'Turis') %>%
na.omit() %>%
mutate(Operacijos_tipas = ifelse(Operacija_puse=='D_K' | Operacija_puse=='D_D', 'Dvietape', 'Vienmomente')) %>%
select(Operacijos_tipas, Turis)
summ_data <- turis_op %>%
group_by(Operacijos_tipas) %>%
summarise(
mean = mean(Turis),
sd = sd(Turis),
n = n()
)
bxp <- turis_op %>%
group_by(Operacijos_tipas) %>%
ggboxplot(x='Operacijos_tipas', y='Turis', fill = '#60b3e4')+
labs(title='Pašalintų liaukos svorių priklausomybė nuo operacijos metodikos',
x=NULL,
y='Svoris, gramai')+
theme_classic()+
scale_fill_brewer(palette = "Pastel1")+
scale_y_continuous(limits = c(0,1800), expand = c(0, 0))+
scale_x_discrete(labels = c('Dviejų etapų,\nn=32',
'Vienmomentinė,\nn=66'))
ttest <- turis_op %>%
t_test(Turis~Operacijos_tipas)
ttest['p'] <- 'p<0.001'
ttest
ttest <- ttest %>%
add_xy_position(x='Operacijos_tipas', dodge=0.9, step.increase = 0.3)
bxp = bxp + stat_pvalue_manual(
ttest, label='p', tip.length = 0.01)
bxp
ggsave('svoris_metodas_box.png', width = 10, height = 5)
pivot <- duomenys_pilni %>%
select(II_OPERACIJOS_ETAPO_TRUKME, VIENU_ETAPU_OPERUOJANT_OPERACIJOS_TRUKME) %>%
pivot_longer(c(II_OPERACIJOS_ETAPO_TRUKME, VIENU_ETAPU_OPERUOJANT_OPERACIJOS_TRUKME), names_to = 'Tipas', values_to = 'Trukme') %>%
na.omit()
summ_stats <- pivot %>%
group_by(Tipas) %>%
summarise(
mean = mean(Trukme),
sd= sd(Trukme),
n = n()
)
summ_stats
bxp <- pivot %>%
ggboxplot('Tipas', 'Trukme', fill='#60b3e4')+
labs(title = 'Profilaktinės mastektomijos su rekonstrukcija trukmė,\npriklausomai ar prieš tai buvo atlikta paruošiamoji operacija',
x= NULL,
y= 'Valandos')+
scale_x_discrete(labels=c('Po paruošiamosios\noperacijos',
'Vienmomentinė'))+
theme_classic()+
scale_y_continuous(limits = c(0,15), expand = c(0, 0))
ttest <- pivot %>%
t_test(Trukme ~ Tipas)
ttest
ttest <- ttest %>%
add_xy_position(x='Tipas', dodge=0.8, step.increase = 0.3)
ttest$y.position <- 11.5
bxp = bxp + stat_pvalue_manual(
ttest, label='p', tip.length = 0.01)
bxp
ggsave('trukme_metodas_box.png', width = 10, height = 5)
count_table <- duomenys_pilni %>%
select(II_PT = KRUTU_PTOZE_PRIES_I_ETAPĄ, I_PT = VIENU_ETAPU_OPERUOJANT_PTOZE_PRIESOPERACINE) %>%
pivot_longer(c(I_PT, II_PT), values_to = 'Ptoze', names_to = 'Operacija') %>%
na.omit() %>%
mutate(Operacija = factor(Operacija), Ptoze = factor(Ptoze)) %>%
table()
count_table
print('Fisherio Exact:')
count_table %>%
CrossTable(prop.r = FALSE, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE, fisher = TRUE)
plot_box <- as.data.frame(count_table) %>%
ggplot(aes(Ptoze, Freq, fill=Operacija))+
geom_bar(stat='identity')+
labs(title = 'Operacijos metodo pasirinkimas,\npriklausomai nuo krūtų ptozės ',
y=NULL,
x=NULL,
fill = NULL)+
scale_fill_discrete(labels = c('Vienmomentinė', 'Dviejų etapų'))+
scale_fill_manual(values=my_palette)+
scale_x_discrete(labels = c('Ptozės nėra','I laipsnio\nptozė','II laipsnio\nptozė', 'III laipsnio\nptozė'))
plot_box
ggsave('metodas_ptoze.png', width = 10, height = 5)
pivot <- duomenys_pilni %>%
select(D_Turis = II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, V_Turis = VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS, D_Tinklelis = AR_NAUDOTAS_TINKLELIS_II_ETAPO_METU, V_Tinklelis = AR_NAUDOTAS_TINKLELIS_OPERUOJANT_VIENU_ETAPU) %>%
pivot_longer(c(D_Turis, V_Turis), names_to = 'Tipas', values_to = 'Turis') %>%
drop_na(Turis) %>%
mutate(Tinklelis = ifelse(!is.na(D_Tinklelis), D_Tinklelis, V_Tinklelis)) %>%
select(Tipas, Tinklelis, Turis)
sum_stats <- pivot %>%
group_by(Tipas, Tinklelis) %>%
summarise(
mean = mean(Turis),
sd = sd(Turis),
n = n()
)
pivot %>%
t_test(Turis ~ Tipas)
duomenys_pilni <- duomenys %>%
filter(AR_BUVO_NUSTATYTAS_VEZYS != 'x')
count_table <- duomenys_pilni %>%
select(SIRGO_AR_PIRMINE, AR_BUVO_NUSTATYTAS_VEZYS) %>%
table()
count_table
plot_box <- as.data.frame(count_table) %>%
ggplot(aes(SIRGO_AR_PIRMINE, Freq, fill=AR_BUVO_NUSTATYTAS_VEZYS))+
geom_bar(stat='identity', position = position_stack(reverse = TRUE))+
labs(title = 'Naviko aptikimo atvejai pagal ligos istoriją',
y=NULL,
x=NULL,
fill=NULL,
)+
scale_x_discrete(labels = c('Pirminis\nsusirgimas',
'Pasikartojęs\nsusirgimas'))+
scale_fill_manual(values=my_palette, breaks = c('TAIP', 'NE'), labels=c('Rasta', 'Nerasta'))
plot_box
pivot <- duomenys_pilni %>%
select(D_Turis = II_ETAPO_NAUDOTI_IMPLANTAI_TURIS_cc, V_Turis = VIENU_ETAPU_OPERUOTU_IMPLANTU_TURIS, D_Tinklelis = AR_NAUDOTAS_TINKLELIS_II_ETAPO_METU, V_Tinklelis = AR_NAUDOTAS_TINKLELIS_OPERUOJANT_VIENU_ETAPU) %>%
pivot_longer(c(D_Turis, V_Turis), names_to = 'Tipas', values_to = 'Turis') %>%
drop_na(Turis) %>%
mutate(Tinklelis = ifelse(!is.na(D_Tinklelis), D_Tinklelis, V_Tinklelis)) %>%
select(Tipas, Tinklelis, Turis)
sum_stats <- pivot %>%
group_by(Tipas, Tinklelis) %>%
summarise(
mean = mean(Turis),
sd = sd(Turis),
n = n()
)
pivot %>%
t_test(Turis ~ Tipas)
pivot %>%
t_test(Turis ~ Tinklelis)
res.aov<-aov(Turis ~ Tipas + Tinklelis + Tipas*Tinklelis, data=pivot)
summary(res.aov)
bxp <- pivot %>%
group_by(Tipas) %>%
ggboxplot(x='Tipas', y='Turis', fill='Tinklelis',
palette = my_palette)+
labs(title='Tinklelio naudojimas priklausomai nuo operacijos tipo ir implantu turio',
x=NULL,
y='Turis, cc',
color='Tinklelis')+
scale_x_discrete(labels = c('Dvietape',
'Vienmomente'))+
geom_text(data=sum_stats,
aes(y=50, label = paste("n=", n)),
position = position_dodge2(.9), vjust = 1)+
scale_y_continuous(limits = c(0, 800), expand = c(0, 0))+
theme_classic()
bxp
ggsave('operacija_turis_box.png', width = 10, height = 5)
ttest <- pivot %>%
t_test(Turis ~ Tipas, alternative = 'greater')
bxp <- pivot %>%
ggboxplot(x='Tipas', y='Turis', fill='#60b3e4')+
labs(title='Naudotų implantų tūrių priklausomybė\nnuo pasirinktos chirurginės metodikos.',
x=NULL,
y='Implantų tūris, cc')+
scale_x_discrete(labels = c('Po paruošiamosios operacijos',
'Vienmomentinė'))+
geom_text(data=sum_stats,
aes(y=50, label = paste("n=", n)),
position = position_dodge2(.9), vjust = 1)+
scale_y_continuous(limits = c(0, 650), expand = c(0, 0))+
theme_classic()
ttest <- ttest %>%
add_xy_position(x='Tipas', dodge=0.8, step.increase = 0.3)
ttest$y.position <- 600
bxp = bxp + stat_pvalue_manual(
ttest, label='p', tip.length = 0.01)
bxp
ggsave('turis_metodika_box.png', width = 10, height = 5)
